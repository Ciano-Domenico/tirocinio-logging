user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Log format JSON per analisi
    log_format detailed escape=json '{'
        '"timestamp":"$time_iso8601",'
        '"remote_addr":"$remote_addr",'
        '"request":"$request",'
        '"status":"$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"upstream_response_time":"$upstream_response_time",'
        '"upstream_addr":"$upstream_addr",'
        '"http_user_agent":"$http_user_agent",'
        '"server_name":"$server_name"'
    '}';

    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log;

    sendfile on;
    keepalive_timeout 65;

    # Upstream backends
    upstream app1_backend {
        server app1:80 max_fails=3 fail_timeout=30s;
    }

    upstream app2_backend {
        server app2:80 max_fails=3 fail_timeout=30s;
    }

    upstream app3_backend {
        server app3:3000 max_fails=3 fail_timeout=30s;
    }

    # Server principale - porta 80
    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        # App1 - servizio Nginx
        location /app1/ {
            proxy_pass http://app1_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header X-Upstream-Server app1;
        }

        # App2 - servizio Apache
        location /app2/ {
            proxy_pass http://app2_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header X-Upstream-Server app2;
        }

        # App3 - servizio Node.js
        location /app3/ {
            proxy_pass http://app3_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header X-Upstream-Server app3;
        }

        # Default location per errori 404
        location / {
            return 404 "Service not found\n";
            add_header Content-Type text/plain;
        }
    }

    # Server di monitoraggio - porta 8080
    server {
        listen 8080;
        server_name localhost;

        # Nginx status
        location /nginx_status {
            stub_status on;
            access_log off;
            allow all;
        }
    }
}
